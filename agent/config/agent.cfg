
ServerIP = 0.0.0.0
Port = 5000
AllowPut = no
AllowPutFrom = localhost

HttpHeaders {
    Access-Control-Allow-Origin = *
    Access-Control-Allow-Methods = GET
    Access-Control-Allow-Headers = Content-Type
}

ReconnectInterval = 1000
WorkerThreads = 2
# MinimumConfigReloadAge = 30
BufferSize = 17
MaxAssets = 8096

SchemaVersion = 2.4
ShdrVersion = 2.0 # Set Default on all Adapters
JsonVerson = 2.0

SuppressIPAddress = yes
IgnoreTimestamps = yes
MonitorConfigFiles = yes
# Validation = no
ConversionRequired = no
UpcaseDataItemValue = yes
EnableSourceDeviceModels = no
VersionDeviceXml = yes
CreateUniqueIds = no
PreserveUUID = no
Pretty = yes

## Security
TlsOnly = no
# TlsPrivateKey = /mtconnect/data/security/user.key
# TlsCertificateChain = /mtconnect/data/ssecurity/user.crt
# TlsCertificatePassword = mtconnect
# TlsDHKey = /mtconnect/data/security/dh2048.pem

## MQTT Client
# MqttHost = 0.0.0.0
# MqttPort = 1883
# MqttCert = NULL
# MqttCaCert = NULL
# MqttTls = no
# MqttWs = no

Adapters {
    Saw {
        Protocol = shdr
        RealTime = no
        Host = mtc_adapter
        Port = 7878

        AutoAvailable = yes
        Manufacturer = HEMSaw
        FilterDuplicates = yes
    }
}

Sinks {
#   Push data from agent to a broker
    Mqtt2Service{
        MqttHost = mosquitto
        MqttPort = 1883
        MqttUserName = mtconnect
        MqttPassword = mtconnect
        MqttClientId = mtc_agent

        ProbeTopic = mtconnect/probe/#
        CurrentTopic = mtconnect/current/#
        SampleTopic = mtconnect/sample/#
        AssetTopic = mtconnect/asset/#

        MqttCurrentInterval = 10000ms
        MqttSampleInterval = 500ms
        MqttSampleCount = 1000
        MqttRetain = yes
        MqttQOS = at_least_once
    }
}


Files {
    schemas {
        Path = /mtconnect/data/schemas
        Location = /schemas/
    }
    styles {
        Path = /mtconnect/data/styles
        Location = /styles/
    }
    Favicon {
        Path = /mtconnect/data/styles
        Location = /styles/
    }
}

Ruby {
  # module =  /mtconnect/data/ruby/module.rb
}

DevicesStyle { Location = /styles/styles.xsl }
StreamsStyle { Location = /styles/styles.xsl }

logger_config {
    logging_level = warn #trace, debug, info, warn, error, or fatal
    output = cout
}
